{"version":3,"sources":["globalConstants.js","pages/WCL/Tactical.js","pages/WCL/index.js","serviceWorker.js","pages/Layout/index.js","image/logo.png","pages/Players/index.js","pages/Players/player.js","pages/Raids/index.js","services/axios.js","services/index.js","models/player.js","models/raid.js","models/role.js","models/common.js","models/generalModel.js","models/index.js","pages/Raids/raid.js","pages/Role/index.js","index.js"],"names":["globalConstants","API_KEY","WCL_API_BASE_URL","API_BASE_URL","WCL_BASE_URL","DATETIME_FORMAT","APPRAISAL_STATUS","text","status","FACTION_STATUS","ATTENDANCE_STATUS","TacticalTable","dataSource","this","props","tactics","rowClassName","record","type","size","loading","columns","title","dataIndex","filters","value","onFilter","children","render","item","resto","stoneShield","natureres","darkAbsorb","darkres2","rowKey","pagination","Component","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","DashboardPage","downloadExcel","report","state","setState","promises","push","actions","getBOSSDmg","getFight","Promise","all","then","getFightsData","submit","getAlarDebuff","getLurkerSpout","getKaelFlame","getVashjCleave","findTargetIds","trashIds","fight","enemies","map","enemy","includes","guid","id","filter","generateSource","bossDmg","alarDebuff","lurkerSpout","kaelFlame","vashjCleave","entry","alar","parseInt","length","lurker","kael","find","i","total","vashj","console","log","KAEL_FINE","name","final","Number","ALAR_FINE","LURKER_FINE","VASHJ_FINE","mergeTactics","slimeTactics","thaddiusTactics","fourTactics","spiderTactics","reduce","sum","_","zipWith","a","b","manual","tactical","fightsData","excelDataSource","sorter","gutter","style","width","placeholder","onChange","event","target","onClick","element","data","label","Tactical","connect","Boolean","window","location","hostname","match","route","path","routes","icon","HomeOutlined","TeamOutlined","FireOutlined","DashboardOutlined","menuItemRender","dom","to","height","border","PageContainer","content","paramrole","common","useEffect","fetchAllParams","valueType","appraisalstatus","valueEnum","pageSize","request","params","player","fetchAllPlayers","page","current","limit","result","playerres","success","code","playercount","playerTable","paramcd","playerData","playerId","fetchPlayer","roleTable","paramrole_id","headerTitle","search","options","resolve","roleres","raidTable","renderText","href","rel","raidres","description","Item","toLowerCase","direction","paramcd_id","finishstatus","defaultCollapsed","raid","fetchAllRaids","raidcount","callAPI","method","url","headers","baseUrl","startsWith","replace","normalizeUrl","axios","response","reject","catch","error","extend","err","field_errors","global_errors","forEach","e","message","extractErrorMessages","routing","pathname","errorHandler","getData","getPlayerLists","queryString","stringify","getPlayerList","getRaidLists","getRaidList","getRoleList","getParamList","initialState","playersData","reducers","effects","service","save","raidsData","raidsCount","raidData","fetchRaid","roleData","fetchRole","role","paramclass","GeneralModel","model","resetState","initModels","mirror","PlayerModel","RaidModel","RoleModel","CommonModel","raidId","useState","setRoleData","scoreres","count","paramroleid","score","paramrolename","avg","Object","values","player_id","defaultSortOrder","pfname","pcname","rlname","moment","raidstarttime","format","wclcode","attendanceTable","cdres","attendance","concat","cd","attends","scoreTable","roleId","undefined","setRole","faction","setFaction","allianceAttendance","setAllianceAttendance","setCdres","hordeAttendance","setHordeAttendance","allianceScore","setAllianceScore","allianceRaids","setAllianceRaids","hordeScore","setHordeScore","hordeRaids","setHordeRaids","setStates","mapToAttendance","allianceroleattendres","horderoleattendres","allianceraidres","mapToScore","alliancerolescoreres","horderaidres","horderolescoreres","attend","acc","assign","miss","rate","toLocaleString","toFixed","roleOptions","Option","onSelect","v","Group","buttonStyle","Button","base","exact","from","component","WCLPage","PlayersPage","PlayerPage","RaidsPage","RaidPage","RolePage","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b14fabd.chunk.js","sourcesContent":["export const globalConstants = {\r\n    API_KEY: '8973e2f9f9412a72ff5f0aa377e1f391',\r\n    WCL_API_BASE_URL: 'https://classic.warcraftlogs.com/v1/',\r\n\r\n    // DASHBOARD\r\n    API_BASE_URL: 'http://1.15.154.218/speedrunadmin/public/api',\r\n    WCL_BASE_URL: 'https://classic.warcraftlogs.com/reports/',\r\n    DATETIME_FORMAT: 'YYYY-MM-DD HH:mm',\r\n    APPRAISAL_STATUS: {\r\n        1: { text: '正式队员', status: 'Success' },\r\n        2: { text: '考核队员', status: 'Processing' },\r\n        3: { text: '冷冻队员', status: 'Error' },\r\n    },\r\n    FACTION_STATUS: {\r\n        1: { text: '联盟', status: 'Processing' },\r\n        2: { text: '部落', status: 'Error' },\r\n    },\r\n    ATTENDANCE_STATUS: {\r\n        '出战': {status:'success'},\r\n        '替补': {status:'processing'},\r\n        '轮换': {status:'processing'},\r\n        '休息': {status:'processing'},\r\n        '请假': {status:'error'},\r\n        '未满足出战条件': {status:'warning'},\r\n    }\r\n}\r\n","import {Component} from 'react'\r\nimport {Table} from 'antd'\r\n\r\nclass TacticalTable extends Component{\r\n\r\n    render() {\r\n        const dataSource =  this.props.tactics\r\n        const columns = [\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '职业',\r\n                dataIndex: 'type',\r\n                filters: [\r\n                    {\r\n                        text: '战',\r\n                        value: 'Warrior',\r\n                    },\r\n                    {\r\n                        text: '法',\r\n                        value: 'Mage',\r\n                    },\r\n                    {\r\n                        text: '术',\r\n                        value: 'Warlock',\r\n                    },\r\n                    {\r\n                        text: '猎',\r\n                        value: 'Hunter',\r\n                    },\r\n                    {\r\n                        text: '贼',\r\n                        value: 'Rogue',\r\n                    },\r\n                    {\r\n                        text: '德',\r\n                        value: 'Druid',\r\n                    },\r\n                    {\r\n                        text: '牧',\r\n                        value: 'Priest',\r\n                    },\r\n                    {\r\n                        text: '骑',\r\n                        value: 'Paladin',\r\n                    },\r\n                    {\r\n                        text: '萨',\r\n                        value: 'Shaman',\r\n                    },\r\n\r\n                ],\r\n                onFilter: (value, record) => record.type === value ,\r\n            },\r\n            {\r\n                title: '构造区',\r\n                children: [\r\n                    {\r\n                        title: '胖子+软泥',\r\n                        children: [\r\n                            {\r\n                                title: '致密伤害',\r\n                                dataIndex: 'dense1',\r\n                            },\r\n                            {\r\n                                title: '帽子伤害',\r\n                                dataIndex: 'hat',\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: '电男死愿/冲动',\r\n                        dataIndex: 'deathwish1',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                title: '瘟疫区',\r\n                children: [\r\n                    {\r\n                        title: '诺斯滋补',\r\n                        dataIndex: 'resto',\r\n                        render: (text, item)=> item.resto ? '有诅咒没滋补或吃了被取消':'没问题'\r\n                    },\r\n                    {\r\n                        title: '跳舞男迅捷鞋',\r\n                        dataIndex: 'swiftBoot',\r\n                    },\r\n                    {\r\n                        title: '孢子死愿/冲动',\r\n                        dataIndex: 'deathwish2',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                title: '军事区',\r\n                children: [\r\n                    {\r\n                        title: '邪恶武器石盾',\r\n                        dataIndex: 'stoneShield',\r\n                        render: (text, item)=> item.stoneShield ? '1':'0'\r\n                    },\r\n                    {\r\n                        title: '4DK暗抗',\r\n                        dataIndex: 'darkres',\r\n                    },\r\n                    {\r\n                        title: '4DK鲁莽/乱舞',\r\n                        dataIndex: 'recklessness',\r\n                    },\r\n                    {\r\n                        title: '4DK死愿/冲动',\r\n                        dataIndex: 'deathwish3',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                title: '蜘蛛区',\r\n                children: [\r\n                    {\r\n                        title: '自然抗',\r\n                        dataIndex: 'natureres',\r\n                        render: (text, item)=> item.natureres ? '有自然抗或没受伤害': '可能没有(需复查)'\r\n                    },\r\n                    {\r\n                        title: '蜘蛛1火箭鞋',\r\n                        dataIndex: 'rocketBoot',\r\n                    },\r\n                    {\r\n                        title: '侍僧暗吸',\r\n                        dataIndex: 'darkAbsorb',\r\n                        render: (text, item)=> item.darkAbsorb ? '有':'没有'\r\n                    },\r\n                    {\r\n                        title: '侍僧地精工兵',\r\n                        dataIndex: 'sapper',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                title: '中心区',\r\n                children: [\r\n                    {\r\n                        title: '冰龙暗抗吸收',\r\n                        dataIndex: 'darkres2',\r\n                        render: (text, item)=> !item.darkres2 && '没有'\r\n                    },\r\n                    {\r\n                        title: '冰龙死愿',\r\n                        dataIndex: 'deathwish4',\r\n                    },\r\n                    {\r\n                        title: '老克冰抗',\r\n                        dataIndex: 'iceres',\r\n                    },\r\n                    {\r\n                        title: '老克打断',\r\n                        dataIndex: 'interrupt2',\r\n                    },\r\n                ]\r\n            },\r\n\r\n\r\n            // {\r\n            //     title: '总分',\r\n            //     dataIndex: 'finalDamage',\r\n            //     sorter: (a, b) => a.finalDamage-b.finalDamage,\r\n            //     defaultSortOrder: 'descend',\r\n            // },\r\n            // {\r\n            //     title: '百分比',\r\n            //     dataIndex: 'finalScore',\r\n            // },\r\n        ]\r\n        return (\r\n            <Table\r\n                rowClassName={record=>record.type}\r\n                size=\"small\"\r\n                loading={this.props.loading}\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                rowKey='id'\r\n                pagination={false}\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TacticalTable\r\n","import {Component} from 'react'\r\nimport _ from 'lodash'\r\nimport {Button, Input, Table, Card, Col, Row} from 'antd'\r\nimport {actions, connect} from 'mirrorx'\r\nimport {globalConstants} from '../../globalConstants'\r\nimport ReactExport from 'react-data-export'\r\nimport TacticalTable from './Tactical'\r\n\r\nconst ExcelFile = ReactExport.ExcelFile\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn\r\n\r\nclass DashboardPage extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            report: null,\r\n            loading: false,\r\n            manual: [],\r\n            tactical: false\r\n        }\r\n    }\r\n\r\n    downloadExcel = () => {\r\n        const {report} = this.state\r\n        this.setState({loading: true})\r\n        let promises = []\r\n        promises.push(actions.report.getBOSSDmg(report))\r\n        promises.push(actions.report.getFight(report))\r\n        Promise.all(promises).then(()=>{\r\n            actions.report.getFightsData(report).then(()=>{this.setState({loading: false})})\r\n        })\r\n    }\r\n\r\n    submit = () => {\r\n        const { report} = this.state\r\n        let promises = []\r\n        this.setState({loading: true})\r\n        promises.push(actions.report.getBOSSDmg(report))\r\n        // promises.push(actions.report.getFight(report))\r\n        promises.push(actions.report.getAlarDebuff(report))\r\n        promises.push(actions.report.getLurkerSpout(report))\r\n        promises.push(actions.report.getKaelFlame(report))\r\n        promises.push(actions.report.getVashjCleave(report))\r\n        Promise.all(promises).then(()=>{\r\n            promises = []\r\n            // if (tactical){\r\n            //     return\r\n            // }else {\r\n            //     const trashIds = this.findTargetIds(globalConstants.TRASHIDS, this.props.fight)\r\n            //     const removedBossIds = this.findTargetIds(globalConstants.REMOVEBOSSIDS, this.props.fight)\r\n            //     promises.push(actions.report.getBossTrashDmg({trashIds, reportId: report, removedBossIds}))\r\n            // }\r\n            Promise.all(promises).then(()=>{\r\n                this.setState({loading: false})\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    findTargetIds = (trashIds, fight) => {\r\n        const enemies = fight?.enemies\r\n        return enemies.map(enemy=>trashIds.includes(enemy.guid)&&enemy.id).filter(id=>!!id)\r\n    }\r\n\r\n    generateSource = () => {\r\n        const {bossDmg, alarDebuff, lurkerSpout, kaelFlame, vashjCleave} = this.props\r\n        let source = bossDmg?.map(entry=>{\r\n            const alar = parseInt(alarDebuff?.filter(id=>id===entry.id).length)\r\n            const lurker = lurkerSpout?.includes(entry.id)\r\n            const kael = kaelFlame?.find(i=>i.id===entry.id)?.total || 0\r\n            const vashj = vashjCleave?.find(i=>i.id===entry.id)?.total || 0\r\n            console.log(parseInt(kael*globalConstants.KAEL_FINE))\r\n            return {\r\n                id: entry.id,\r\n                name: entry.name,\r\n                type: entry.type,\r\n                bossDmg: entry.total,\r\n                alarDebuff: alar,\r\n                lurkerSpout: lurker,\r\n                kaelFlame:kael,\r\n                vashjCleave: vashj,\r\n                final:Number(alar*globalConstants.ALAR_FINE)+Number(lurker ?globalConstants.LURKER_FINE:0)+\r\n                parseInt(kael*globalConstants.KAEL_FINE)+ (vashj>0?globalConstants.VASHJ_FINE:0)\r\n            }\r\n        })\r\n\r\n        return source\r\n    }\r\n\r\n    mergeTactics = () => {\r\n        const {slimeTactics, thaddiusTactics, fourTactics, spiderTactics} = this.props\r\n        const tacticsArray = [slimeTactics, thaddiusTactics, fourTactics, spiderTactics]\r\n        return tacticsArray.reduce((sum,item)=>_.zipWith(sum, item, (a,b,)=>({...a,...b})))\r\n    }\r\n\r\n    render() {\r\n        const {fightsData} = this.props\r\n        const tactics = this.mergeTactics()\r\n        const {tactical, loading} = this.state\r\n        const dataSource =  this.generateSource()\r\n        const excelDataSource = fightsData\r\n        const columns = [\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '职业',\r\n                dataIndex: 'type',\r\n                filters: [\r\n                    {\r\n                        text: '战',\r\n                        value: 'Warrior',\r\n                    },\r\n                    {\r\n                        text: '法',\r\n                        value: 'Mage',\r\n                    },\r\n                    {\r\n                        text: '术',\r\n                        value: 'Warlock',\r\n                    },\r\n                    {\r\n                        text: '猎',\r\n                        value: 'Hunter',\r\n                    },\r\n                    {\r\n                        text: '贼',\r\n                        value: 'Rogue',\r\n                    },\r\n                    {\r\n                        text: '德',\r\n                        value: 'Druid',\r\n                    },\r\n                    {\r\n                        text: '牧',\r\n                        value: 'Priest',\r\n                    },\r\n                    {\r\n                        text: '骑',\r\n                        value: 'Paladin',\r\n                    },\r\n                    {\r\n                        text: '萨',\r\n                        value: 'Shaman',\r\n                    },\r\n\r\n                ],\r\n                onFilter: (value, record) => record.type === value ,\r\n            },\r\n            {\r\n                title: 'Boss伤害',\r\n                dataIndex: 'bossDmg',\r\n                sorter: (a, b) => a.bossDmg-b.bossDmg,\r\n            },\r\n            {\r\n                title: `奥踩火三秒以上(${globalConstants.ALAR_FINE}G/次)`,\r\n                dataIndex: 'alarDebuff',\r\n                render: (text, record) => record.alarDebuff>0 ? text+'次': null\r\n            },\r\n            {\r\n                title: '王子烈焰风暴(1000伤害80G)',\r\n                dataIndex: 'kaelFlame',\r\n                sorter: (a, b) => a.kaelFlame-b.kaelFlame,\r\n            },\r\n            {\r\n                title: `鱼斯拉喷涌(${globalConstants.LURKER_FINE}G)`,\r\n                dataIndex: 'lurkerSpout',\r\n                render: (text, record) => record.lurkerSpout && '菜逼被喷飞'\r\n            },\r\n            {\r\n                title: `瓦斯琪顺劈伤害(有伤害即${globalConstants.VASHJ_FINE}G)`,\r\n                dataIndex: 'vashjCleave',\r\n                sorter: (a, b) => a.vashjCleave-b.vashjCleave,\r\n            },\r\n            {\r\n                title: '瓦斯琪踩毒两秒以上(300G/次)',\r\n                dataIndex: 'alarDebuff',\r\n                render: (text, record) => record.alarDebuff>0 ? text+'次': null\r\n            },\r\n            {\r\n                title: '总罚款',\r\n                dataIndex: 'final',\r\n                sorter: (a, b) => a.final-b.final,\r\n            },\r\n        ]\r\n        return (\r\n            <Card title={<Row type=\"flex\" gutter={16}>\r\n                {/*<Col>*/}\r\n                {/*    <Switch*/}\r\n                {/*        checked={tactical}*/}\r\n                {/*        onChange={(checked)=>this.setState({tactical: checked})}*/}\r\n                {/*        checkedChildren=\"战术动作\"*/}\r\n                {/*        unCheckedChildren=\"伤害统计\"*/}\r\n                {/*    />*/}\r\n                {/*</Col>*/}\r\n                <Col>\r\n                    <Input\r\n                        style={{width: 400}}\r\n                        placeholder=\"请粘贴reportID，例如: Jzx9tgnTKvVwAX\"\r\n                        onChange={event => this.setState({report: event.target.value})}/>\r\n                </Col>\r\n                <Col>\r\n                    <Button onClick={this.submit}>提交</Button>\r\n                </Col>\r\n                {!tactical && <Col><Button onClick={this.downloadExcel}>生成下载链接</Button></Col>}\r\n                {excelDataSource &&  <Col><ExcelFile element={<Button>下载</Button>}>\r\n                    <ExcelSheet data={excelDataSource} name=\"原始数据\">\r\n                        <ExcelColumn label=\"mark\" value=\"mark\"/>\r\n                        <ExcelColumn label=\"BattleID\" value=\"BattleID\"/>\r\n                        <ExcelColumn label=\"BattleName\" value=\"BattleName\"/>\r\n                        <ExcelColumn label=\"StartTime\" value=\"StartTime\"/>\r\n                        <ExcelColumn label=\"EndTime\" value=\"EndTime\"/>\r\n                        <ExcelColumn label=\"class\" value=\"class\"/>\r\n                        <ExcelColumn label=\"name\" value=\"name\"/>\r\n                        <ExcelColumn label=\"damage-done\" value=\"damageDone\"/>\r\n                        <ExcelColumn label=\"healing\" value=\"healing\"/>\r\n                    </ExcelSheet>\r\n                </ExcelFile>\r\n                </Col>}\r\n            </Row>}>\r\n                {tactical ?\r\n                    <TacticalTable\r\n                        loading={loading}\r\n                        tactics={tactics}\r\n                    /> :\r\n                    <Table\r\n                        rowClassName={record => record.type}\r\n                        size=\"small\"\r\n                        loading={loading}\r\n                        dataSource={dataSource}\r\n                        columns={columns}\r\n                        rowKey='id'\r\n                        pagination={false}\r\n                    />\r\n                }\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(state=>state.report) (DashboardPage)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import ProLayout, { PageContainer } from '@ant-design/pro-layout'\r\nimport {TeamOutlined, FireOutlined, HomeOutlined, DashboardOutlined} from '@ant-design/icons'\r\nimport {Link} from 'mirrorx'\r\nimport '@ant-design/pro-layout/dist/layout.css'\r\nimport Logo from '../../image/logo.png'\r\n\r\n\r\nconst route = {\r\n    path: '/player',\r\n    routes:  [\r\n        {\r\n            path: '/',\r\n            name: '首页',\r\n            icon: <HomeOutlined />,\r\n        },\r\n        {\r\n            path: '/players',\r\n            name: '队员列表',\r\n            icon: <TeamOutlined />,\r\n        },\r\n        {\r\n            path: '/raids',\r\n            name: '活动列表',\r\n            icon: <FireOutlined />,\r\n        },\r\n        {\r\n            path: '/roles',\r\n            name: '考核组列表',\r\n            icon: <DashboardOutlined />,\r\n        },\r\n    ]}\r\n\r\n\r\n// eslint-disable-next-line react/display-name\r\nexport default (props) => {\r\n\r\n    return (<ProLayout\r\n        menuItemRender={(item, dom) => (\r\n            <Link to={item.path}>\r\n                {dom}\r\n            </Link>\r\n        )}\r\n        style={{\r\n            height: '100vh',\r\n            border: '1px solid #ddd',\r\n        }}\r\n        title=\"Noobs AOT\"\r\n        // logo={Logo}\r\n        route={route}\r\n    >\r\n\r\n        <PageContainer content={props?.content} />\r\n    </ProLayout>)\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.fe228aa1.png\";","import PageLayout from '../Layout'\r\nimport {actions, connect, Link} from 'mirrorx'\r\nimport ProTable from '@ant-design/pro-table'\r\nimport moment from 'moment'\r\nimport {useEffect} from 'react'\r\nimport {globalConstants} from '../../globalConstants'\r\n\r\nconst mapStateToProps = state => ({\r\n    paramrole: state.common.paramrole\r\n})\r\n\r\nconst PlayersPage = (props) => {\r\n\r\n    useEffect(()=>{\r\n        !props.paramrole && actions.common.fetchAllParams()\r\n    },[props.paramrole])\r\n\r\n    const playerTable = () =>{\r\n        const columns = [\r\n            {\r\n                dataIndex: 'id',\r\n                valueType: 'indexBorder',\r\n                width: 36,\r\n            },\r\n            {\r\n                title: '队员名称',\r\n                dataIndex: 'name',\r\n                render: (text, item)=> <Link to={`/player/${item.id}`}>{text}</Link>\r\n            },\r\n            {\r\n                title: '昵称',\r\n                dataIndex: 'title',\r\n                render: text=> text && text!== 'null' ? text : ''\r\n            },\r\n            {\r\n                title: '考核状态',\r\n                dataIndex: 'appraisalstatus',\r\n                sorter: (a, b) => a.appraisalstatus - b.appraisalstatus,\r\n                valueEnum: globalConstants.APPRAISAL_STATUS\r\n            },\r\n        ]\r\n        return(\r\n            <ProTable\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                pagination={{\r\n                    pageSize: 25,\r\n                }}\r\n                request={async (params) => {\r\n                    const result = await actions.player.fetchAllPlayers({\r\n                        page: params.current,\r\n                        limit: params.pageSize,\r\n                        ...params\r\n                    })\r\n                    return {\r\n                        data: result?.data?.playerres,\r\n                        success: result?.code===1,\r\n                        total: result?.data?.playercount\r\n                    }\r\n                }}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        <PageLayout\r\n            content={playerTable()}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(PlayersPage)\r\n","import PageLayout from '../Layout'\r\nimport {actions, Link, connect} from 'mirrorx'\r\nimport ProTable from '@ant-design/pro-table'\r\nimport {globalConstants} from '../../globalConstants'\r\nimport {useEffect} from 'react'\r\nimport {Descriptions, Badge, Space } from 'antd'\r\n\r\nconst mapStateToProps = state => ({\r\n    paramrole: state.common.paramrole,\r\n    paramcd: state.common.paramcd,\r\n    playerData: state.player.playerData\r\n})\r\n\r\nconst PlayerPage = (props) => {\r\n    const {playerId} = props.match.params\r\n    useEffect(()=>{actions.player.fetchPlayer({id: playerId})},[playerId])\r\n    const roleTable = (playerData) =>{\r\n        const columns = [\r\n            {\r\n                title: '队员职业天赋名称',\r\n                dataIndex: 'name',\r\n                render: (text, item)=> <Link to={`/role/${item.paramrole_id}`}>{text}</Link>\r\n            },\r\n        ]\r\n        return(\r\n            <ProTable\r\n                style={{width: 300}}\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                headerTitle=\"考核列表\"\r\n                pagination={false}\r\n                search={false}\r\n                options={false}\r\n\r\n                request={ () => {\r\n                    return Promise.resolve( {\r\n                        data: playerData?.roleres,\r\n                        success: true,\r\n                    })\r\n                }}\r\n            />)\r\n    }\r\n\r\n    const raidTable = (playerData) =>{\r\n        const cdEnum = props.paramcd?.reduce((result,item)=>{\r\n            result[item.id]=item.name\r\n            return result\r\n        },{})\r\n        const columns = [\r\n            {\r\n                dataIndex: 'id',\r\n                valueType: 'indexBorder',\r\n                width: 36,\r\n            },\r\n            {\r\n                title: '活动名称',\r\n                dataIndex: 'name',\r\n                render: (text, item)=> <Link to={`/raid/${item.id}`}>{text}</Link>\r\n            },\r\n            {\r\n                title: 'WCL地址',\r\n                dataIndex: 'wclcode',\r\n                search: false,\r\n                renderText: (text) => text && !text.includes('NULL') ?\r\n                    <a href={globalConstants.WCL_BASE_URL+text} target=\"_blank\" rel=\"noreferrer\">{text}</a> : ''\r\n            },\r\n            {\r\n                title: '阵营',\r\n                dataIndex: 'paramfaction_id',\r\n                valueEnum: {\r\n                    1: { text: '联盟', status: 'Processing' },\r\n                    2: { text: '部落', status: 'Error' },\r\n                },\r\n            },\r\n            {\r\n                title: 'CD',\r\n                dataIndex: 'paramcd_id',\r\n                valueEnum: cdEnum\r\n            },\r\n            {\r\n                title: '完成状态',\r\n                dataIndex: 'finishstatus',\r\n                valueEnum: {\r\n                    1: { text: '已完成评分', status: 'Success' },\r\n                    2: { text: '尚未开始', status: 'Error' },\r\n                    3: { text: '评分阶段', status: 'Processing' },\r\n                    4: { text: '待导入', status: 'Processing' },\r\n                    5: { text: '导入中', status: 'Processing' },\r\n                    6: { text: '导入完毕', status: 'Processing' },\r\n                },\r\n                search: false,\r\n            },\r\n\r\n        ]\r\n        return(\r\n            <ProTable\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                pagination={{\r\n                    pageSize: 10,\r\n                }}\r\n                headerTitle=\"活动列表\"\r\n                search={false}\r\n                request={ () => {\r\n                    return Promise.resolve( {\r\n                        data: playerData?.raidres,\r\n                        success: true,\r\n                    })\r\n                }}\r\n            />)\r\n    }\r\n\r\n    const description = () => {\r\n        return (\r\n            <Descriptions title={props.playerData?.player?.name}>\r\n                <Descriptions.Item label=\"昵称\">{props.playerData?.player?.title}</Descriptions.Item>\r\n                <Descriptions.Item label=\"考核状态\">\r\n                    <Badge\r\n                        status={globalConstants.APPRAISAL_STATUS[props.playerData?.player?.appraisalstatus]?.status.toLowerCase()}\r\n                        text={globalConstants.APPRAISAL_STATUS[props.playerData?.player?.appraisalstatus]?.text}\r\n                    />\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n        )\r\n    }\r\n    const content = () => {\r\n        return (\r\n            <Space direction=\"vertical\">\r\n                {description()}\r\n                {props.playerData && roleTable(props.playerData)}\r\n                {props.playerData && raidTable(props.playerData)}\r\n            </Space>\r\n        )\r\n    }\r\n    return (\r\n        <PageLayout\r\n            content={content()}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(PlayerPage)\r\n","import PageLayout from '../Layout'\r\nimport {actions, connect, Link} from 'mirrorx'\r\nimport ProTable from '@ant-design/pro-table'\r\nimport {globalConstants} from '../../globalConstants'\r\nimport {useEffect} from 'react'\r\n\r\nconst mapStateToProps = state => ({\r\n    paramcd: state.common.paramcd,\r\n})\r\n\r\nconst RaidsPage = (props) => {\r\n    useEffect(()=>{\r\n        !props.paramcd && actions.common.fetchAllParams()\r\n    },[props.paramcd])\r\n\r\n\r\n    const raidTable = () =>{\r\n        const cdEnum = props.paramcd?.reduce((result,item)=>{\r\n            result[item.id]=item.name\r\n            return result\r\n        },{})\r\n        const columns = [\r\n            {\r\n                dataIndex: 'id',\r\n                valueType: 'indexBorder',\r\n                width: 36,\r\n            },\r\n            {\r\n                title: '活动名称',\r\n                dataIndex: 'name',\r\n                render: (text, item)=> <Link to={`/raid/${item.id}`}>{text}</Link>\r\n            },\r\n            {\r\n                title: 'WCL地址',\r\n                dataIndex: 'wclcode',\r\n                search: false,\r\n                renderText: (text) => text && !text.includes('NULL') ?\r\n                    <a href={globalConstants.WCL_BASE_URL+text} target=\"_blank\" rel=\"noreferrer\">{text}</a> : ''\r\n            },\r\n            {\r\n                title: 'RL名称',\r\n                dataIndex: 'rlname',\r\n                search: false\r\n            },\r\n            {\r\n                title: '阵营',\r\n                dataIndex: 'paramfaction_id',\r\n                valueEnum: {\r\n                    1: { text: '联盟', status: 'Processing' },\r\n                    2: { text: '部落', status: 'Error' },\r\n                },\r\n            },\r\n            {\r\n                title: 'CD',\r\n                dataIndex: 'paramcd_id',\r\n                valueEnum: cdEnum,\r\n                sorter: (a,b)=>a.paramcd_id-b.paramcd_id\r\n            },\r\n            {\r\n                title: '完成状态',\r\n                dataIndex: 'finishstatus',\r\n                valueEnum: {\r\n                    1: { text: '已完成评分', status: 'Success' },\r\n                    2: { text: '尚未开始', status: 'Error' },\r\n                    3: { text: '评分阶段', status: 'Processing' },\r\n                    4: { text: '待导入', status: 'Processing' },\r\n                    5: { text: '导入中', status: 'Processing' },\r\n                    6: { text: '导入完毕', status: 'Processing' },\r\n                },\r\n                search: false,\r\n                sorter: (a,b)=>a.finishstatus-b.finishstatus\r\n            },\r\n\r\n        ]\r\n        return(\r\n            <ProTable\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                pagination={{\r\n                    pageSize: 25,\r\n                }}\r\n                search={{defaultCollapsed:false}}\r\n                request={async (params) => {\r\n                    const result = await actions.raid.fetchAllRaids({\r\n                        page: params.current,\r\n                        limit: params.pageSize,\r\n                        ...params\r\n                    })\r\n                    return {\r\n                        data: result?.data?.raidres,\r\n                        success: result?.code===1,\r\n                        total: result?.data?.raidcount\r\n                    }\r\n                }}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        <PageLayout\r\n            content={raidTable()}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(RaidsPage)\r\n","import axios from 'axios'\r\nimport _, {startsWith} from 'lodash'\r\nimport {actions} from 'mirrorx'\r\nimport {globalConstants} from '../globalConstants'\r\n\r\nfunction normalizeUrl(baseUrl, url) {\r\n    if (startsWith(url, baseUrl)) return url\r\n    return baseUrl.replace(/\\/*$/, '') + '/' + url.replace(/^\\/*/, '')\r\n}\r\n\r\n/** extract Error Message\r\n * @param {Object} err { field_errors , global_errors , message }\r\n * @return {string}\r\n */\r\nfunction extractErrorMessages (err) {\r\n    let field_errors = err.field_errors || []\r\n    let global_errors = err.global_errors ? err.global_errors.forEach(e => {\r\n        return `${e.message}`\r\n    }) : []\r\n\r\n    if(err.message) {\r\n        global_errors.push(err.message)\r\n    }\r\n\r\n    return {\r\n        field_errors,\r\n        global_errors\r\n    }\r\n}\r\n\r\nconst errorHandler = (error) =>{\r\n    const { response } = error\r\n    const { status } = response\r\n    if (status>= 501 && status<=504 ) {\r\n        actions.routing.push({\r\n            pathname: '/exception',\r\n            state: {code: status}\r\n        })\r\n    }else{\r\n        error.response && error.response.data &&_.extend(error.response.data, extractErrorMessages(error.response.data))\r\n        return Promise.reject(error)\r\n    }\r\n}\r\n\r\nfunction callAPI(method, url, headers, data,) {\r\n    url = normalizeUrl(globalConstants.API_BASE_URL, url)\r\n\r\n    return axios({\r\n        method: method,\r\n        url: url,\r\n        headers: headers,\r\n        data: data,\r\n    }) .then((response) => {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response.data\r\n        } else {\r\n            return Promise.reject(response)\r\n        }\r\n    })\r\n        .catch((error) => {\r\n            return errorHandler(error)\r\n        })\r\n\r\n}\r\n\r\n\r\nfunction getData(url) {\r\n    return callAPI('GET', url, null, null)\r\n}\r\n\r\nfunction saveData(url, payload, method) {\r\n    return callAPI(method, url, null, payload)\r\n}\r\n\r\nexport { getData, saveData }\r\n","import { getData } from './axios'\r\nimport queryString from 'query-string'\r\n\r\n\r\nfunction getPlayerLists(params) {\r\n    const url = `human/lists?${queryString.stringify(params)}`\r\n    return getData(url)\r\n}\r\n\r\nfunction getPlayerList(params) {\r\n    const url = `human/list?${queryString.stringify(params)}`\r\n    return getData(url)\r\n}\r\n\r\nfunction getRaidLists(params) {\r\n    const url = `raid/lists?${queryString.stringify(params)}`\r\n    return getData(url)\r\n}\r\n\r\nfunction getRaidList(params) {\r\n    const url = `raid/list?${queryString.stringify(params)}`\r\n    return getData(url)\r\n}\r\n\r\nfunction getRoleList(params) {\r\n    const url = `role/list?${queryString.stringify(params)}`\r\n    return getData(url)\r\n}\r\n\r\nfunction getParamList() {\r\n    const url = 'index/listAllParam'\r\n    return getData(url)\r\n}\r\n\r\nexport default {\r\n    getPlayerLists,\r\n    getPlayerList,\r\n    getRaidLists,\r\n    getRaidList,\r\n    getRoleList,\r\n    getParamList,\r\n}\r\n","import service from '../services/'\r\nimport { actions } from 'mirrorx'\r\n\r\nexport default {\r\n    name: 'player',\r\n    initialState: {\r\n        playersData: null,\r\n        playerData: null,\r\n    },\r\n    reducers: {\r\n    },\r\n    effects: {\r\n        async fetchAllPlayers (params={page:1,limit:25}) {\r\n            try {\r\n                const data = await service.getPlayerLists(params)\r\n                actions.player.save({\r\n                    playersData: data?.data?.playerres,\r\n                })\r\n                return data\r\n            } catch(err) {\r\n                actions.player.save({\r\n                    playersData: []\r\n                })\r\n                return Promise.reject(err.response.data)\r\n            }\r\n        },\r\n\r\n        async fetchPlayer (params) {\r\n            try {\r\n                const data = await service.getPlayerList(params)\r\n                actions.player.save({\r\n                    playerData: data?.data\r\n                })\r\n                return data\r\n            } catch(err) {\r\n                actions.player.save({\r\n                    playerData: {}\r\n                })\r\n                return Promise.reject(err.response.data)\r\n            }\r\n        },\r\n\r\n    }\r\n}\r\n","import service from '../services/'\r\nimport { actions } from 'mirrorx'\r\n\r\nexport default {\r\n    name: 'raid',\r\n    initialState: {\r\n        raidsData: null,\r\n        raidsCount: 0,\r\n        raidData: null,\r\n    },\r\n    reducers: {\r\n    },\r\n    effects: {\r\n        async fetchAllRaids (params) {\r\n            try {\r\n                const data = await service.getRaidLists(params)\r\n                actions.raid.save({\r\n                    raidsData: data?.data?.raidres,\r\n                    raidsCount: data?.data?.raidcount\r\n                })\r\n                return data\r\n            } catch(err) {\r\n                actions.raid.save({\r\n                    raidsData: []\r\n                })\r\n                return Promise.reject(err.response.data)\r\n            }\r\n        },\r\n\r\n        async fetchRaid (params) {\r\n            try {\r\n                const data = await service.getRaidList(params)\r\n                actions.raid.save({\r\n                    raidData: data?.data\r\n                })\r\n                return data\r\n            } catch(err) {\r\n                actions.raid.save({\r\n                    raidData: {}\r\n                })\r\n                return Promise.reject(err.response.data)\r\n            }\r\n        },\r\n\r\n    }\r\n}\r\n","import service from '../services/'\r\nimport { actions } from 'mirrorx'\r\n\r\nexport default {\r\n    name: 'role',\r\n    initialState: {\r\n        roleData: null,\r\n    },\r\n    reducers: {\r\n    },\r\n    effects: {\r\n        async fetchRole (params) {\r\n            try {\r\n                const data = await service.getRoleList(params)\r\n                actions.role.save({\r\n                    roleData: data?.data\r\n                })\r\n                return data\r\n            } catch(err) {\r\n                actions.role.save({\r\n                    roleData: {}\r\n                })\r\n                return Promise.reject(err.response.data)\r\n            }\r\n        },\r\n\r\n    }\r\n}\r\n","import service from '../services/'\r\nimport { actions } from 'mirrorx'\r\n\r\nexport default {\r\n    name: 'common',\r\n    initialState: {\r\n        paramcd: null,\r\n        paramrole: null,\r\n        paramclass: null,\r\n    },\r\n    reducers: {\r\n    },\r\n    effects: {\r\n        async fetchAllParams () {\r\n            try {\r\n                const data = await service.getParamList()\r\n                actions.common.save({\r\n                    paramcd: data?.data?.paramcd,\r\n                    paramrole: data?.data?.paramrole,\r\n                    paramclass: data?.data?.paramclass,\r\n                })\r\n                return data\r\n            } catch(err) {\r\n                return Promise.reject(err.response.data)\r\n            }\r\n        },\r\n\r\n    }\r\n}\r\n","export function GeneralModel(model = {}) {\r\n    const { reducers, initialState } = model\r\n    model.reducers = {\r\n        resetState: () => initialState,\r\n        save(state, data) {\r\n            return {\r\n                ...state,\r\n                ...data\r\n            }\r\n        },\r\n        ...reducers\r\n    }\r\n    return model\r\n}\r\n","import PlayerModel from './player'\r\nimport RaidModel from './raid'\r\nimport RoleModel from './role'\r\nimport CommonModel from './common'\r\nimport {GeneralModel} from './generalModel'\r\n\r\nconst initModels = (mirror) => {\r\n    mirror.model(GeneralModel(PlayerModel))\r\n    mirror.model(GeneralModel(RaidModel))\r\n    mirror.model(GeneralModel(RoleModel))\r\n    mirror.model(GeneralModel(CommonModel))\r\n}\r\n\r\nexport default initModels\r\n\r\n","import PageLayout from '../Layout'\r\nimport {actions, Link, connect} from 'mirrorx'\r\nimport ProTable from '@ant-design/pro-table'\r\nimport moment from 'moment'\r\nimport {globalConstants} from '../../globalConstants'\r\nimport {useEffect, useState} from 'react'\r\nimport {Descriptions, Badge, Space} from 'antd'\r\n\r\nconst mapStateToProps = state => ({\r\n    paramrole: state.common.paramrole,\r\n    raidData: state.raid.raidData\r\n})\r\n\r\nconst RaidPage = (props) => {\r\n    const {raidId} = props.match.params\r\n    const [roleData, setRoleData] = useState()\r\n    useEffect(()=>{\r\n        actions.raid.fetchRaid({id: raidId}).then(result=>{\r\n            let sum = {}\r\n            result?.data?.scoreres.map(record=>{\r\n                const count = sum[record.paramroleid]?.count? sum[record.paramroleid].count+1 : 1\r\n                const score = sum[record.paramroleid]?.score? sum[record.paramroleid].score+record.score: record.score\r\n                sum[record.paramroleid] = {\r\n                    paramroleid: record.paramroleid,\r\n                    paramrolename: record.paramrolename,\r\n                    count,\r\n                    score,\r\n                    avg: Number.parseInt(score/count)\r\n                }\r\n            })\r\n            setRoleData(Object.values(sum))\r\n        })\r\n        return function cleanup(){\r\n            actions.raid.save({raidData: null})\r\n        }\r\n    },[raidId])\r\n    const playerTable = (raidData) =>{\r\n        const columns = [\r\n            {\r\n                title: '队员名称',\r\n                dataIndex: 'playername',\r\n                render: (text, item)=> <Link to={`/player/${item.player_id}`}>{text}</Link>\r\n            },\r\n            {\r\n                title: '出战账号名称',\r\n                dataIndex: 'accountname',\r\n            },\r\n            {\r\n                title: '职业天赋',\r\n                dataIndex: 'paramrolename',\r\n                sorter: (a, b) => a.paramroleid - b.paramroleid,\r\n                render: (text, item)=> <Link to={`/role/${item.paramroleid}`}>{text}</Link>\r\n            },\r\n            {\r\n                title: '分数',\r\n                dataIndex: 'score',\r\n                sorter: (a, b) => a.score - b.score,\r\n                defaultSortOrder: 'descend'\r\n            },\r\n        ]\r\n        return(\r\n            <ProTable\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                pagination={{\r\n                    pageSize: 25,\r\n                }}\r\n                search={false}\r\n                request={ () => {\r\n                    return Promise.resolve( {\r\n                        data: raidData?.scoreres,\r\n                        success: true,\r\n                    })\r\n                }}\r\n            />)\r\n    }\r\n\r\n    const roleTable = (roleData) =>{\r\n        const columns = [\r\n            {\r\n                title: '职业天赋',\r\n                dataIndex: 'paramrolename',\r\n                render: (text, item)=> <Link to={`/role/${item.paramroleid}`}>{text}</Link>\r\n            },\r\n            {\r\n                title: '人数',\r\n                dataIndex: 'count',\r\n            },\r\n\r\n            {\r\n                title: '平均分',\r\n                dataIndex: 'avg',\r\n                sorter: (a, b) => a.avg - b.avg,\r\n                defaultSortOrder: 'descend'\r\n            },\r\n        ]\r\n        return(\r\n            <ProTable\r\n                columns={columns}\r\n                rowKey=\"paramroleid\"\r\n                pagination={false}\r\n                search={false}\r\n                request={ () => {\r\n                    return Promise.resolve( {\r\n                        data: roleData,\r\n                        success: true,\r\n                    })\r\n                }}\r\n            />)\r\n    }\r\n\r\n    const description = (raidData) => {\r\n        const raid = raidData?.raid\r\n\r\n        return (\r\n            <Descriptions title={raid.name}>\r\n                <Descriptions.Item label=\"阵营\">\r\n                    <Badge\r\n                        status={globalConstants.FACTION_STATUS[raid.paramcd_id]?.status.toLowerCase()}\r\n                        text={raid.pfname}\r\n                    />\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"CD\">\r\n                    {raid.pcname}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"团长\">\r\n                    {raid.rlname}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"时间\">\r\n                    {moment(raid.raidstarttime*1000).format(globalConstants.DATETIME_FORMAT)}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"WCL地址\">\r\n                    {raid.wclcode && !raid.wclcode.includes('NULL') ?\r\n                        <a href={globalConstants.WCL_BASE_URL+raid.wclcode} target=\"_blank\" rel=\"noreferrer\">{raid.wclcode}</a> : ''}\r\n                </Descriptions.Item>\r\n            </Descriptions>\r\n        )\r\n    }\r\n    const content = () => {\r\n        return (\r\n            props.raidData && <Space direction=\"vertical\">\r\n                {description(props.raidData)}\r\n                {playerTable(props.raidData)}\r\n                {roleData && roleTable(roleData)}\r\n            </Space>\r\n        )\r\n    }\r\n    return (\r\n        <PageLayout\r\n            content={content()}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(RaidPage)\r\n","import PageLayout from '../Layout'\r\nimport {actions, connect, Link} from 'mirrorx'\r\nimport ProTable from '@ant-design/pro-table'\r\nimport {Fragment, useEffect, useState} from 'react'\r\nimport {globalConstants} from '../../globalConstants'\r\nimport {Space, Select, Radio, Card, Badge} from 'antd'\r\n\r\nconst mapStateToProps = state => ({\r\n    paramrole: state.common.paramrole,\r\n    paramcd: state.common.paramcd,\r\n    roleData: state.role.roleData\r\n})\r\n\r\nconst checkAttendance = (status) => {\r\n    return !status?.includes('请假') && !status?.includes('未满足')\r\n}\r\n\r\nconst attendanceTable = (cdres, attendance) =>{\r\n    const columns = [\r\n        {\r\n            title: '队员名称',\r\n            dataIndex: 'playername',\r\n            render: (text, item)=> <Link to={`/player/${item.player_id}`}>{text}</Link>\r\n        }\r\n    ].concat(cdres?.map(cd=>({\r\n        title: cd.name,\r\n        dataIndex: cd.name,\r\n        render: text=>  <Badge\r\n            status={globalConstants.ATTENDANCE_STATUS[text]?.status}\r\n            text={text}\r\n        />\r\n    }))).concat([{\r\n        title: '应到',\r\n        dataIndex: 'sum',\r\n    },{\r\n        title: '实到',\r\n        dataIndex: 'attends',\r\n    },{\r\n        title: '出勤率',\r\n        dataIndex: 'rate',\r\n        sorter: (a,b)=>a.attends/a.sum-b.attends/b.sum\r\n    }])\r\n\r\n    return(\r\n        <Card title=\"出战情况\" size=\"small\">\r\n            <ProTable\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                pagination={{\r\n                    pageSize: 10,\r\n                }}\r\n                options={false}\r\n                search={false}\r\n                request={ () => {\r\n                    return Promise.resolve( {\r\n                        data: attendance,\r\n                        success: true,\r\n                    })\r\n                }}\r\n            /></Card>)\r\n}\r\n\r\nconst scoreTable = (raidres, score) =>{\r\n    const columns = [\r\n        {\r\n            title: '队员名称',\r\n            dataIndex: 'playername',\r\n            render: (text, item)=> <Link to={`/player/${item.player_id}`}>{text}</Link>\r\n        }\r\n    ].concat(raidres?.map(raid=>({\r\n        title: raid.name,\r\n        dataIndex: raid.name,\r\n    }))).concat([{\r\n        title: '场次',\r\n        dataIndex: 'count',\r\n    },{\r\n        title: '总分',\r\n        dataIndex: 'sum',\r\n    },{\r\n        title: '平均分',\r\n        dataIndex: 'avg',\r\n        sorter: (a,b)=>a.avg-b.avg,\r\n        defaultSortOrder: 'descend'\r\n    }])\r\n\r\n    return(\r\n        <Card title=\"评分情况\" size=\"small\">\r\n            <ProTable\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                pagination={{\r\n                    pageSize: 10,\r\n                }}\r\n                options={false}\r\n                search={false}\r\n                request={ () => {\r\n                    return Promise.resolve( {\r\n                        data: score,\r\n                        success: true,\r\n                    })\r\n                }}\r\n            /></Card>)\r\n}\r\n\r\nconst RolePage = (props) => {\r\n    const {paramrole, match} = props\r\n    const [role, setRole] = useState(match.params?.roleId ? Number.parseInt(match.params?.roleId): undefined)\r\n    const [faction, setFaction] = useState(1)\r\n    const [allianceAttendance, setAllianceAttendance] = useState()\r\n    const [cdres, setCdres] = useState()\r\n    const [hordeAttendance, setHordeAttendance] = useState()\r\n    const [allianceScore, setAllianceScore] = useState()\r\n    const [allianceRaids, setAllianceRaids] = useState()\r\n    const [hordeScore, setHordeScore] = useState()\r\n    const [hordeRaids, setHordeRaids] = useState()\r\n\r\n    const selectRole = (v) => {\r\n        setRole(v)\r\n        actions.role.fetchRole({paramrole_id:v}).then(result=>{\r\n            setStates(result)\r\n        })\r\n    }\r\n\r\n    const setStates = (result) => {\r\n        setCdres(result?.data?.cdres)\r\n        setAllianceAttendance(mapToAttendance(result?.data?.allianceroleattendres))\r\n        setHordeAttendance(mapToAttendance(result?.data?.horderoleattendres))\r\n        setAllianceRaids(result?.data?.allianceraidres)\r\n        setAllianceScore(mapToScore(result?.data?.alliancerolescoreres))\r\n        setHordeRaids(result?.data?.horderaidres)\r\n        setHordeScore(mapToScore(result?.data?.horderolescoreres))\r\n    }\r\n\r\n    const mapToAttendance = (data) =>{\r\n        let result = []\r\n        result = data!=='' && data?.map(record=>{\r\n            let attend = record.attend?.reduce((acc,item)=>Object.assign(acc,item),{})\r\n            attend.sum = record.attend?.length\r\n            attend.miss = record.attend?.reduce((acc,item)=>acc + checkAttendance(Object.values(item)[0]) ? 0 : 1 ,0)\r\n            attend.attends = attend.sum - attend.miss\r\n            attend.rate =  (attend.attends/attend.sum).toLocaleString('en', {style: 'percent'})\r\n            return Object.assign(record, attend)\r\n        })\r\n        return result\r\n    }\r\n\r\n    const mapToScore = (data) =>{\r\n        let result = []\r\n        result = data!=='' && data?.map(record=>{\r\n            let score = record.score?.reduce((acc,item)=>Object.assign(acc,item),{})\r\n            score.count = record.score?.reduce((acc,item)=>acc + (Object.values(item)[0]=== '' ? 0 : 1) ,0)\r\n            score.sum = record.score?.reduce((acc,item)=>acc + Object.values(item)[0] ,0)\r\n            score.avg =  (score.sum/score.count).toFixed(1)\r\n            return Object.assign(record, score)\r\n        })\r\n        return result\r\n    }\r\n\r\n    useEffect(()=>{\r\n        !paramrole && actions.common.fetchAllParams()\r\n    },[paramrole])\r\n\r\n    useEffect(()=>{\r\n        match.params.roleId && actions.role.fetchRole({paramrole_id:match.params.roleId}).then(result=>{\r\n            setStates(result)\r\n        })\r\n        return actions.role.save({roleData: null})\r\n        // eslint-disable-next-line\r\n    },[match.params.roleId])\r\n\r\n    const roleOptions =  paramrole?.map(role=>(\r\n        <Select.Option key={role.id} value={role.id}>{role.name}</Select.Option>\r\n    ))\r\n\r\n    return (\r\n        <PageLayout content={\r\n            <Fragment>\r\n                <Space direction=\"vertical\">\r\n                    <Space>\r\n                        {paramrole && <Select\r\n                            placeholder=\"请选择职业天赋进行查看\"\r\n                            style={{width: 250}}\r\n                            size=\"large\"\r\n                            value={role}\r\n                            onSelect={selectRole}\r\n                        >{roleOptions}</Select>\r\n                        }\r\n                        {role && <Radio.Group value={faction} buttonStyle=\"solid\" size=\"large\" onChange={e=>setFaction(e.target.value)}>\r\n                            <Radio.Button value={1}>联盟</Radio.Button>\r\n                            <Radio.Button value={2}>部落</Radio.Button>\r\n                        </Radio.Group>}\r\n                    </Space>\r\n\r\n                    {allianceAttendance && faction === 1 && attendanceTable(cdres,allianceAttendance)}\r\n                    {hordeAttendance && faction === 2 && attendanceTable(cdres,hordeAttendance)}\r\n                    {allianceScore && faction === 1 && scoreTable(allianceRaids,allianceScore)}\r\n                    {hordeScore && faction === 2 && scoreTable(hordeRaids,hordeScore)}\r\n                </Space>\r\n            </Fragment>}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps,{})(RolePage)\r\n","import './index.css'\nimport WCLPage from './pages/WCL'\nimport * as serviceWorker from './serviceWorker'\nimport logger from 'redux-logger'\n\nimport mirror, { Router, Switch, render, Route, Redirect } from 'mirrorx'\nimport PlayersPage from './pages/Players'\nimport PlayerPage from './pages/Players/player'\nimport RaidsPage from './pages/Raids'\nimport initModels from './models'\nimport '@ant-design/pro-table/dist/table.css'\nimport RaidPage from './pages/Raids/raid'\nimport RolePage from './pages/Role'\n\ninitModels(mirror)\n\nprocess.env.NODE_ENV === 'development' && mirror.defaults({\n    middlewares : [logger],\n})\n\nrender(\n    <Router base>\n        <Switch>\n            <Redirect exact from='/' to='/players'/>\n            <Redirect exact from='/Noobs-Dashboard' to='/players'/>\n            <Route path='/wcl' component={WCLPage}/>\n            <Route path='/players' component={PlayersPage}/>\n            <Route exact path='/player/:playerId' component={PlayerPage}/>\n            <Route exact path='/raids' component={RaidsPage}/>\n            <Route exact path='/raid/:raidId' component={RaidPage}/>\n            <Route exact path='/roles' component={RolePage}/>\n            <Route exact path='/role/:roleId' component={RolePage}/>\n        </Switch>\n    </Router>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}