{"version":3,"sources":["globalConstants.js","pages/WCL/Tactical.js","pages/WCL/index.js","serviceWorker.js","pages/Layout/index.js","pages/Players/index.js","pages/Raids/index.js","services/axios.js","services/index.js","models/player.js","models/raid.js","models/generalModel.js","models/index.js","index.js"],"names":["globalConstants","API_KEY","WCL_API_BASE_URL","API_BASE_URL","WCL_BASE_URL","TacticalTable","dataSource","this","props","tactics","rowClassName","record","type","size","loading","columns","title","dataIndex","filters","text","value","onFilter","children","render","item","resto","stoneShield","natureres","darkAbsorb","darkres2","rowKey","pagination","Component","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","DashboardPage","downloadExcel","report","state","setState","promises","push","actions","getBOSSDmg","getFight","Promise","all","then","getFightsData","submit","getAlarDebuff","getLurkerSpout","getKaelFlame","getVashjCleave","findTargetIds","trashIds","fight","enemies","map","enemy","includes","guid","id","filter","generateSource","bossDmg","alarDebuff","lurkerSpout","kaelFlame","vashjCleave","entry","alar","parseInt","length","lurker","kael","find","i","total","vashj","console","log","KAEL_FINE","name","final","Number","ALAR_FINE","LURKER_FINE","VASHJ_FINE","mergeTactics","slimeTactics","thaddiusTactics","fourTactics","spiderTactics","reduce","sum","_","zipWith","a","b","manual","tactical","fightsData","excelDataSource","sorter","gutter","style","width","placeholder","onChange","event","target","onClick","element","data","label","Tactical","connect","Boolean","window","location","hostname","match","route","path","routes","process","icon","HomeOutlined","TeamOutlined","FireOutlined","menuItemRender","dom","to","height","border","PageContainer","content","PlayersPage","valueType","copyable","search","appraisalstatus","valueEnum","status","createtime","moment","format","pageSize","request","params","player","fetchAllPlayers","page","current","limit","result","playerres","success","code","playercount","playerTable","RaidsPage","renderText","href","rel","raid","fetchAllRaids","raidres","raidcount","raidTable","callAPI","method","url","headers","baseUrl","startsWith","replace","normalizeUrl","axios","response","reject","catch","error","extend","err","field_errors","global_errors","forEach","e","message","extractErrorMessages","routing","pathname","errorHandler","getData","getPlayerLists","queryString","stringify","getPlayerList","getRaidLists","getRaidList","initialState","playersData","playerData","reducers","effects","service","save","fetchPlayer","raidsData","raidsCount","raidData","fetchRaid","GeneralModel","model","resetState","initModels","mirror","PlayerModel","RaidModel","base","exact","from","component","WCLPage","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88216958.chunk.js","sourcesContent":["export const globalConstants = {\r\n    API_KEY: '8973e2f9f9412a72ff5f0aa377e1f391',\r\n    WCL_API_BASE_URL: 'https://classic.warcraftlogs.com/v1/',\r\n\r\n    // DASHBOARD\r\n    API_BASE_URL: 'http://1.15.154.218/speedrunadmin/public/api',\r\n    WCL_BASE_URL: 'https://classic.warcraftlogs.com/reports/',\r\n}\r\n","import {Component} from 'react'\r\nimport {Table} from 'antd'\r\n\r\nclass TacticalTable extends Component{\r\n\r\n    render() {\r\n        const dataSource =  this.props.tactics\r\n        const columns = [\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '职业',\r\n                dataIndex: 'type',\r\n                filters: [\r\n                    {\r\n                        text: '战',\r\n                        value: 'Warrior',\r\n                    },\r\n                    {\r\n                        text: '法',\r\n                        value: 'Mage',\r\n                    },\r\n                    {\r\n                        text: '术',\r\n                        value: 'Warlock',\r\n                    },\r\n                    {\r\n                        text: '猎',\r\n                        value: 'Hunter',\r\n                    },\r\n                    {\r\n                        text: '贼',\r\n                        value: 'Rogue',\r\n                    },\r\n                    {\r\n                        text: '德',\r\n                        value: 'Druid',\r\n                    },\r\n                    {\r\n                        text: '牧',\r\n                        value: 'Priest',\r\n                    },\r\n                    {\r\n                        text: '骑',\r\n                        value: 'Paladin',\r\n                    },\r\n                    {\r\n                        text: '萨',\r\n                        value: 'Shaman',\r\n                    },\r\n\r\n                ],\r\n                onFilter: (value, record) => record.type === value ,\r\n            },\r\n            {\r\n                title: '构造区',\r\n                children: [\r\n                    {\r\n                        title: '胖子+软泥',\r\n                        children: [\r\n                            {\r\n                                title: '致密伤害',\r\n                                dataIndex: 'dense1',\r\n                            },\r\n                            {\r\n                                title: '帽子伤害',\r\n                                dataIndex: 'hat',\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: '电男死愿/冲动',\r\n                        dataIndex: 'deathwish1',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                title: '瘟疫区',\r\n                children: [\r\n                    {\r\n                        title: '诺斯滋补',\r\n                        dataIndex: 'resto',\r\n                        render: (text, item)=> item.resto ? '有诅咒没滋补或吃了被取消':'没问题'\r\n                    },\r\n                    {\r\n                        title: '跳舞男迅捷鞋',\r\n                        dataIndex: 'swiftBoot',\r\n                    },\r\n                    {\r\n                        title: '孢子死愿/冲动',\r\n                        dataIndex: 'deathwish2',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                title: '军事区',\r\n                children: [\r\n                    {\r\n                        title: '邪恶武器石盾',\r\n                        dataIndex: 'stoneShield',\r\n                        render: (text, item)=> item.stoneShield ? '1':'0'\r\n                    },\r\n                    {\r\n                        title: '4DK暗抗',\r\n                        dataIndex: 'darkres',\r\n                    },\r\n                    {\r\n                        title: '4DK鲁莽/乱舞',\r\n                        dataIndex: 'recklessness',\r\n                    },\r\n                    {\r\n                        title: '4DK死愿/冲动',\r\n                        dataIndex: 'deathwish3',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                title: '蜘蛛区',\r\n                children: [\r\n                    {\r\n                        title: '自然抗',\r\n                        dataIndex: 'natureres',\r\n                        render: (text, item)=> item.natureres ? '有自然抗或没受伤害': '可能没有(需复查)'\r\n                    },\r\n                    {\r\n                        title: '蜘蛛1火箭鞋',\r\n                        dataIndex: 'rocketBoot',\r\n                    },\r\n                    {\r\n                        title: '侍僧暗吸',\r\n                        dataIndex: 'darkAbsorb',\r\n                        render: (text, item)=> item.darkAbsorb ? '有':'没有'\r\n                    },\r\n                    {\r\n                        title: '侍僧地精工兵',\r\n                        dataIndex: 'sapper',\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                title: '中心区',\r\n                children: [\r\n                    {\r\n                        title: '冰龙暗抗吸收',\r\n                        dataIndex: 'darkres2',\r\n                        render: (text, item)=> !item.darkres2 && '没有'\r\n                    },\r\n                    {\r\n                        title: '冰龙死愿',\r\n                        dataIndex: 'deathwish4',\r\n                    },\r\n                    {\r\n                        title: '老克冰抗',\r\n                        dataIndex: 'iceres',\r\n                    },\r\n                    {\r\n                        title: '老克打断',\r\n                        dataIndex: 'interrupt2',\r\n                    },\r\n                ]\r\n            },\r\n\r\n\r\n            // {\r\n            //     title: '总分',\r\n            //     dataIndex: 'finalDamage',\r\n            //     sorter: (a, b) => a.finalDamage-b.finalDamage,\r\n            //     defaultSortOrder: 'descend',\r\n            // },\r\n            // {\r\n            //     title: '百分比',\r\n            //     dataIndex: 'finalScore',\r\n            // },\r\n        ]\r\n        return (\r\n            <Table\r\n                rowClassName={record=>record.type}\r\n                size=\"small\"\r\n                loading={this.props.loading}\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                rowKey='id'\r\n                pagination={false}\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TacticalTable\r\n","import {Component} from 'react'\r\nimport _ from 'lodash'\r\nimport {Button, Input, Table, Card, Col, Row} from 'antd'\r\nimport {actions, connect} from 'mirrorx'\r\nimport {globalConstants} from '../../globalConstants'\r\nimport ReactExport from 'react-data-export'\r\nimport TacticalTable from './Tactical'\r\n\r\nconst ExcelFile = ReactExport.ExcelFile\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn\r\n\r\nclass DashboardPage extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            report: null,\r\n            loading: false,\r\n            manual: [],\r\n            tactical: false\r\n        }\r\n    }\r\n\r\n    downloadExcel = () => {\r\n        const {report} = this.state\r\n        this.setState({loading: true})\r\n        let promises = []\r\n        promises.push(actions.report.getBOSSDmg(report))\r\n        promises.push(actions.report.getFight(report))\r\n        Promise.all(promises).then(()=>{\r\n            actions.report.getFightsData(report).then(()=>{this.setState({loading: false})})\r\n        })\r\n    }\r\n\r\n    submit = () => {\r\n        const { report} = this.state\r\n        let promises = []\r\n        this.setState({loading: true})\r\n        promises.push(actions.report.getBOSSDmg(report))\r\n        // promises.push(actions.report.getFight(report))\r\n        promises.push(actions.report.getAlarDebuff(report))\r\n        promises.push(actions.report.getLurkerSpout(report))\r\n        promises.push(actions.report.getKaelFlame(report))\r\n        promises.push(actions.report.getVashjCleave(report))\r\n        Promise.all(promises).then(()=>{\r\n            promises = []\r\n            // if (tactical){\r\n            //     return\r\n            // }else {\r\n            //     const trashIds = this.findTargetIds(globalConstants.TRASHIDS, this.props.fight)\r\n            //     const removedBossIds = this.findTargetIds(globalConstants.REMOVEBOSSIDS, this.props.fight)\r\n            //     promises.push(actions.report.getBossTrashDmg({trashIds, reportId: report, removedBossIds}))\r\n            // }\r\n            Promise.all(promises).then(()=>{\r\n                this.setState({loading: false})\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    findTargetIds = (trashIds, fight) => {\r\n        const enemies = fight?.enemies\r\n        return enemies.map(enemy=>trashIds.includes(enemy.guid)&&enemy.id).filter(id=>!!id)\r\n    }\r\n\r\n    generateSource = () => {\r\n        const {bossDmg, alarDebuff, lurkerSpout, kaelFlame, vashjCleave} = this.props\r\n        let source = bossDmg?.map(entry=>{\r\n            const alar = parseInt(alarDebuff?.filter(id=>id===entry.id).length)\r\n            const lurker = lurkerSpout?.includes(entry.id)\r\n            const kael = kaelFlame?.find(i=>i.id===entry.id)?.total || 0\r\n            const vashj = vashjCleave?.find(i=>i.id===entry.id)?.total || 0\r\n            console.log(parseInt(kael*globalConstants.KAEL_FINE))\r\n            return {\r\n                id: entry.id,\r\n                name: entry.name,\r\n                type: entry.type,\r\n                bossDmg: entry.total,\r\n                alarDebuff: alar,\r\n                lurkerSpout: lurker,\r\n                kaelFlame:kael,\r\n                vashjCleave: vashj,\r\n                final:Number(alar*globalConstants.ALAR_FINE)+Number(lurker ?globalConstants.LURKER_FINE:0)+\r\n                parseInt(kael*globalConstants.KAEL_FINE)+ (vashj>0?globalConstants.VASHJ_FINE:0)\r\n            }\r\n        })\r\n\r\n        return source\r\n    }\r\n\r\n    mergeTactics = () => {\r\n        const {slimeTactics, thaddiusTactics, fourTactics, spiderTactics} = this.props\r\n        const tacticsArray = [slimeTactics, thaddiusTactics, fourTactics, spiderTactics]\r\n        return tacticsArray.reduce((sum,item)=>_.zipWith(sum, item, (a,b,)=>({...a,...b})))\r\n    }\r\n\r\n    render() {\r\n        const {fightsData} = this.props\r\n        const tactics = this.mergeTactics()\r\n        const {tactical, loading} = this.state\r\n        const dataSource =  this.generateSource()\r\n        const excelDataSource = fightsData\r\n        const columns = [\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: '职业',\r\n                dataIndex: 'type',\r\n                filters: [\r\n                    {\r\n                        text: '战',\r\n                        value: 'Warrior',\r\n                    },\r\n                    {\r\n                        text: '法',\r\n                        value: 'Mage',\r\n                    },\r\n                    {\r\n                        text: '术',\r\n                        value: 'Warlock',\r\n                    },\r\n                    {\r\n                        text: '猎',\r\n                        value: 'Hunter',\r\n                    },\r\n                    {\r\n                        text: '贼',\r\n                        value: 'Rogue',\r\n                    },\r\n                    {\r\n                        text: '德',\r\n                        value: 'Druid',\r\n                    },\r\n                    {\r\n                        text: '牧',\r\n                        value: 'Priest',\r\n                    },\r\n                    {\r\n                        text: '骑',\r\n                        value: 'Paladin',\r\n                    },\r\n                    {\r\n                        text: '萨',\r\n                        value: 'Shaman',\r\n                    },\r\n\r\n                ],\r\n                onFilter: (value, record) => record.type === value ,\r\n            },\r\n            {\r\n                title: 'Boss伤害',\r\n                dataIndex: 'bossDmg',\r\n                sorter: (a, b) => a.bossDmg-b.bossDmg,\r\n            },\r\n            {\r\n                title: `奥踩火三秒以上(${globalConstants.ALAR_FINE}G/次)`,\r\n                dataIndex: 'alarDebuff',\r\n                render: (text, record) => record.alarDebuff>0 ? text+'次': null\r\n            },\r\n            {\r\n                title: '王子烈焰风暴(1000伤害80G)',\r\n                dataIndex: 'kaelFlame',\r\n                sorter: (a, b) => a.kaelFlame-b.kaelFlame,\r\n            },\r\n            {\r\n                title: `鱼斯拉喷涌(${globalConstants.LURKER_FINE}G)`,\r\n                dataIndex: 'lurkerSpout',\r\n                render: (text, record) => record.lurkerSpout && '菜逼被喷飞'\r\n            },\r\n            {\r\n                title: `瓦斯琪顺劈伤害(有伤害即${globalConstants.VASHJ_FINE}G)`,\r\n                dataIndex: 'vashjCleave',\r\n                sorter: (a, b) => a.vashjCleave-b.vashjCleave,\r\n            },\r\n            {\r\n                title: '瓦斯琪踩毒两秒以上(300G/次)',\r\n                dataIndex: 'alarDebuff',\r\n                render: (text, record) => record.alarDebuff>0 ? text+'次': null\r\n            },\r\n            {\r\n                title: '总罚款',\r\n                dataIndex: 'final',\r\n                sorter: (a, b) => a.final-b.final,\r\n            },\r\n        ]\r\n        return (\r\n            <Card title={<Row type=\"flex\" gutter={16}>\r\n                {/*<Col>*/}\r\n                {/*    <Switch*/}\r\n                {/*        checked={tactical}*/}\r\n                {/*        onChange={(checked)=>this.setState({tactical: checked})}*/}\r\n                {/*        checkedChildren=\"战术动作\"*/}\r\n                {/*        unCheckedChildren=\"伤害统计\"*/}\r\n                {/*    />*/}\r\n                {/*</Col>*/}\r\n                <Col>\r\n                    <Input\r\n                        style={{width: 400}}\r\n                        placeholder=\"请粘贴reportID，例如: Jzx9tgnTKvVwAX\"\r\n                        onChange={event => this.setState({report: event.target.value})}/>\r\n                </Col>\r\n                <Col>\r\n                    <Button onClick={this.submit}>提交</Button>\r\n                </Col>\r\n                {!tactical && <Col><Button onClick={this.downloadExcel}>生成下载链接</Button></Col>}\r\n                {excelDataSource &&  <Col><ExcelFile element={<Button>下载</Button>}>\r\n                    <ExcelSheet data={excelDataSource} name=\"原始数据\">\r\n                        <ExcelColumn label=\"mark\" value=\"mark\"/>\r\n                        <ExcelColumn label=\"BattleID\" value=\"BattleID\"/>\r\n                        <ExcelColumn label=\"BattleName\" value=\"BattleName\"/>\r\n                        <ExcelColumn label=\"StartTime\" value=\"StartTime\"/>\r\n                        <ExcelColumn label=\"EndTime\" value=\"EndTime\"/>\r\n                        <ExcelColumn label=\"class\" value=\"class\"/>\r\n                        <ExcelColumn label=\"name\" value=\"name\"/>\r\n                        <ExcelColumn label=\"damage-done\" value=\"damageDone\"/>\r\n                        <ExcelColumn label=\"healing\" value=\"healing\"/>\r\n                    </ExcelSheet>\r\n                </ExcelFile>\r\n                </Col>}\r\n            </Row>}>\r\n                {tactical ?\r\n                    <TacticalTable\r\n                        loading={loading}\r\n                        tactics={tactics}\r\n                    /> :\r\n                    <Table\r\n                        rowClassName={record => record.type}\r\n                        size=\"small\"\r\n                        loading={loading}\r\n                        dataSource={dataSource}\r\n                        columns={columns}\r\n                        rowKey='id'\r\n                        pagination={false}\r\n                    />\r\n                }\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(state=>state.report) (DashboardPage)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import ProLayout, { PageContainer } from '@ant-design/pro-layout'\r\nimport {TeamOutlined, FireOutlined, HomeOutlined} from '@ant-design/icons'\r\nimport {Link} from 'mirrorx'\r\nimport '@ant-design/pro-layout/dist/layout.css'\r\n\r\n\r\nconst route = {\r\n    path: '/player',\r\n    routes:  [\r\n        {\r\n            path: `${process.env.PUBLIC_URL}/`,\r\n            name: '首页',\r\n            icon: <HomeOutlined />,\r\n        },\r\n        {\r\n            path: `${process.env.PUBLIC_URL}/players`,\r\n            name: '队员列表',\r\n            icon: <TeamOutlined />,\r\n        },\r\n        {\r\n            path: `${process.env.PUBLIC_URL}/raids`,\r\n            name: '活动列表',\r\n            icon: <FireOutlined />,\r\n        },\r\n        {\r\n            path: `${process.env.PUBLIC_URL}/tests`,\r\n            name: '考核组列表',\r\n            icon: <TeamOutlined />,\r\n        },\r\n    ]}\r\n\r\n\r\n// eslint-disable-next-line react/display-name\r\nexport default (props) => {\r\n\r\n    return (<ProLayout\r\n        menuItemRender={(item, dom) => (\r\n            <Link to={item.path}>\r\n                {dom}\r\n            </Link>\r\n        )}\r\n        style={{\r\n            height: '100vh',\r\n            border: '1px solid #ddd',\r\n        }}\r\n        title=\"Noobs AOT\"\r\n        route={route}\r\n    >\r\n\r\n        <PageContainer content={props?.content} />\r\n    </ProLayout>)\r\n}\r\n","import PageLayout from '../Layout'\r\nimport {actions, Link} from 'mirrorx'\r\nimport ProTable from '@ant-design/pro-table'\r\nimport moment from 'moment'\r\n\r\nconst PlayersPage = () => {\r\n\r\n    const playerTable = () =>{\r\n        const columns = [\r\n            {\r\n                dataIndex: 'id',\r\n                valueType: 'indexBorder',\r\n                width: 36,\r\n            },\r\n            {\r\n                title: '队员名称',\r\n                dataIndex: 'name',\r\n                render: (text, item)=> <Link to={`/player/${item.id}`}>{text}</Link>\r\n            },\r\n            {\r\n                title: '微信ID',\r\n                dataIndex: 'wxid',\r\n                copyable: true,\r\n                search: false\r\n            },\r\n            {\r\n                title: '考核状态',\r\n                dataIndex: 'appraisalstatus',\r\n                sorter: (a, b) => a.appraisalstatus - b.appraisalstatus,\r\n                valueEnum: {\r\n                    1: { text: '正式队员', status: 'Success' },\r\n                    2: { text: '考核队员', status: 'Processing' },\r\n                    3: { text: '冷冻队员', status: 'Error' },\r\n                },\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                search: false,\r\n                sorter: (a, b) => a.createtime - b.createtime,\r\n                render: (text)=> moment(text* 1000).format('YYYY-MM-DD HH:mm')\r\n            },\r\n        ]\r\n        return(\r\n            <ProTable\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                pagination={{\r\n                    pageSize: 25,\r\n                }}\r\n                request={async (params) => {\r\n                    const result = await actions.player.fetchAllPlayers({\r\n                        page: params.current,\r\n                        limit: params.pageSize,\r\n                        ...params\r\n                    })\r\n                    return {\r\n                        data: result?.data?.playerres,\r\n                        success: result?.code===1,\r\n                        total: result?.data?.playercount\r\n                    }\r\n                }}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        <PageLayout\r\n            content={playerTable()}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PlayersPage\r\n","import PageLayout from '../Layout'\r\nimport {actions, Link} from 'mirrorx'\r\nimport ProTable from '@ant-design/pro-table'\r\nimport moment from 'moment'\r\nimport {globalConstants} from '../../globalConstants'\r\n\r\nconst RaidsPage = () => {\r\n\r\n    const raidTable = () =>{\r\n        const columns = [\r\n            {\r\n                dataIndex: 'id',\r\n                valueType: 'indexBorder',\r\n                width: 36,\r\n            },\r\n            {\r\n                title: '活动名称',\r\n                dataIndex: 'name',\r\n                render: (text, item)=> <Link to={`/raid/${item.id}`}>{text}</Link>\r\n            },\r\n            {\r\n                title: 'WCL地址',\r\n                dataIndex: 'wclcode',\r\n                search: false,\r\n                renderText: (text) => text && !text.includes('NULL') ?\r\n                    <a href={globalConstants.WCL_BASE_URL+text} target=\"_blank\" rel=\"noreferrer\">{text}</a> : ''\r\n            },\r\n            {\r\n                title: 'RL名称',\r\n                dataIndex: 'rlname',\r\n                search: false\r\n            },\r\n            {\r\n                title: '阵营',\r\n                dataIndex: 'paramfaction_id',\r\n                valueEnum: {\r\n                    1: { text: '联盟', status: 'Processing' },\r\n                    2: { text: '部落', status: 'Error' },\r\n                },\r\n            },\r\n            {\r\n                title: 'CD',\r\n                dataIndex: 'paramcd_id',\r\n                renderText: (text)=> `第${text}CD`\r\n            },\r\n            {\r\n                title: '完成状态',\r\n                dataIndex: 'finishstatus',\r\n                valueEnum: {\r\n                    1: { text: '已完成评分', status: 'Success' },\r\n                    2: { text: '尚未开始', status: 'Error' },\r\n                    3: { text: '评分阶段', status: 'Processing' },\r\n                },\r\n                search: false,\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n                search: false,\r\n                sorter: (a, b) => a.createtime - b.createtime,\r\n                renderText: (text)=> moment(text* 1000).format('YYYY-MM-DD HH:mm')\r\n            },\r\n        ]\r\n        return(\r\n            <ProTable\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                pagination={{\r\n                    pageSize: 25,\r\n                }}\r\n                request={async (params) => {\r\n                    const result = await actions.raid.fetchAllRaids({\r\n                        page: params.current,\r\n                        limit: params.pageSize,\r\n                        ...params\r\n                    })\r\n                    return {\r\n                        data: result?.data?.raidres,\r\n                        success: result?.code===1,\r\n                        total: result?.data?.raidcount\r\n                    }\r\n                }}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        <PageLayout\r\n            content={raidTable()}\r\n        />\r\n    )\r\n}\r\n\r\nexport default RaidsPage\r\n","import axios from 'axios'\r\nimport _, {startsWith} from 'lodash'\r\nimport {actions} from 'mirrorx'\r\nimport {globalConstants} from '../globalConstants'\r\n\r\nfunction normalizeUrl(baseUrl, url) {\r\n    if (startsWith(url, baseUrl)) return url\r\n    return baseUrl.replace(/\\/*$/, '') + '/' + url.replace(/^\\/*/, '')\r\n}\r\n\r\n/** extract Error Message\r\n * @param {Object} err { field_errors , global_errors , message }\r\n * @return {string}\r\n */\r\nfunction extractErrorMessages (err) {\r\n    let field_errors = err.field_errors || []\r\n    let global_errors = err.global_errors ? err.global_errors.forEach(e => {\r\n        return `${e.message}`\r\n    }) : []\r\n\r\n    if(err.message) {\r\n        global_errors.push(err.message)\r\n    }\r\n\r\n    return {\r\n        field_errors,\r\n        global_errors\r\n    }\r\n}\r\n\r\nconst errorHandler = (error) =>{\r\n    const { response } = error\r\n    const { status } = response\r\n    if (status>= 501 && status<=504 ) {\r\n        actions.routing.push({\r\n            pathname: '/exception',\r\n            state: {code: status}\r\n        })\r\n    }else{\r\n        error.response && error.response.data &&_.extend(error.response.data, extractErrorMessages(error.response.data))\r\n        return Promise.reject(error)\r\n    }\r\n}\r\n\r\nfunction callAPI(method, url, headers, data,) {\r\n    url = normalizeUrl(globalConstants.API_BASE_URL, url)\r\n\r\n    return axios({\r\n        method: method,\r\n        url: url,\r\n        headers: headers,\r\n        data: data,\r\n    }) .then((response) => {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response.data\r\n        } else {\r\n            return Promise.reject(response)\r\n        }\r\n    })\r\n        .catch((error) => {\r\n            return errorHandler(error)\r\n        })\r\n\r\n}\r\n\r\n\r\nfunction getData(url) {\r\n    return callAPI('GET', url, null, null)\r\n}\r\n\r\nfunction saveData(url, payload, method) {\r\n    return callAPI(method, url, null, payload)\r\n}\r\n\r\nexport { getData, saveData }\r\n","import { getData } from './axios'\r\nimport queryString from 'query-string'\r\n\r\n\r\nfunction getPlayerLists(params) {\r\n    const url = `human/lists?${queryString.stringify(params)}`\r\n    return getData(url)\r\n}\r\n\r\nfunction getPlayerList(params) {\r\n    const url = `human/list?${queryString.stringify(params)}`\r\n    return getData(url)\r\n}\r\n\r\nfunction getRaidLists(params) {\r\n    const url = `raid/lists?${queryString.stringify(params)}`\r\n    return getData(url)\r\n}\r\n\r\nfunction getRaidList(params) {\r\n    const url = `raid/list?${queryString.stringify(params)}`\r\n    return getData(url)\r\n}\r\n\r\nexport default {\r\n    getPlayerLists,\r\n    getPlayerList,\r\n    getRaidLists,\r\n    getRaidList\r\n}\r\n","import service from '../services/'\r\nimport { actions } from 'mirrorx'\r\n\r\nexport default {\r\n    name: 'player',\r\n    initialState: {\r\n        playersData: null,\r\n        playerData: null,\r\n    },\r\n    reducers: {\r\n    },\r\n    effects: {\r\n        async fetchAllPlayers (params={page:1,limit:25}) {\r\n            try {\r\n                const data = await service.getPlayerLists(params)\r\n                actions.player.save({\r\n                    playersData: data?.data?.playerres,\r\n                })\r\n                return data\r\n            } catch(err) {\r\n                actions.player.save({\r\n                    playersData: []\r\n                })\r\n                return Promise.reject(err.response.data)\r\n            }\r\n        },\r\n\r\n        async fetchPlayer (params) {\r\n            try {\r\n                const data = await service.getPlayerList(params)\r\n                actions.player.save({\r\n                    playerData: data?.data?.data\r\n                })\r\n                return data\r\n            } catch(err) {\r\n                actions.player.save({\r\n                    playerData: {}\r\n                })\r\n                return Promise.reject(err.response.data)\r\n            }\r\n        },\r\n\r\n    }\r\n}\r\n","import service from '../services/'\r\nimport { actions } from 'mirrorx'\r\n\r\nexport default {\r\n    name: 'raid',\r\n    initialState: {\r\n        raidsData: null,\r\n        raidsCount: 0,\r\n        raidData: null,\r\n    },\r\n    reducers: {\r\n    },\r\n    effects: {\r\n        async fetchAllRaids (params) {\r\n            try {\r\n                const data = await service.getRaidLists(params)\r\n                actions.raid.save({\r\n                    raidsData: data?.data?.raidres,\r\n                    raidsCount: data?.data?.raidcount\r\n                })\r\n                return data\r\n            } catch(err) {\r\n                actions.raid.save({\r\n                    raidsData: []\r\n                })\r\n                return Promise.reject(err.response.data)\r\n            }\r\n        },\r\n\r\n        async fetchRaid (params) {\r\n            try {\r\n                const data = await service.getRaidList(params)\r\n                actions.raid.save({\r\n                    raidData: data?.data?.data\r\n                })\r\n                return data\r\n            } catch(err) {\r\n                actions.raid.save({\r\n                    raidData: {}\r\n                })\r\n                return Promise.reject(err.response.data)\r\n            }\r\n        },\r\n\r\n    }\r\n}\r\n","export function GeneralModel(model = {}) {\r\n    const { reducers, initialState } = model\r\n    model.reducers = {\r\n        resetState: () => initialState,\r\n        save(state, data) {\r\n            return {\r\n                ...state,\r\n                ...data\r\n            }\r\n        },\r\n        ...reducers\r\n    }\r\n    return model\r\n}\r\n","import PlayerModel from './player'\r\nimport RaidModel from './raid'\r\nimport {GeneralModel} from './generalModel'\r\n\r\nconst initModels = (mirror) => {\r\n    mirror.model(GeneralModel(PlayerModel))\r\n    mirror.model(GeneralModel(RaidModel))\r\n}\r\n\r\nexport default initModels\r\n\r\n","import './index.css'\nimport WCLPage from './pages/WCL'\nimport * as serviceWorker from './serviceWorker'\nimport logger from 'redux-logger'\n\nimport mirror, { Router, Switch, render, Route, Redirect } from 'mirrorx'\nimport PlayersPage from './pages/Players'\nimport RaidsPage from './pages/Raids'\nimport initModels from './models'\nimport '@ant-design/pro-table/dist/table.css'\n\ninitModels(mirror)\n\nprocess.env.NODE_ENV === 'development' && mirror.defaults({\n    middlewares : [logger],\n})\n\nrender(\n    <Router base>\n        <Switch>\n            <Redirect exact from={`${process.env.PUBLIC_URL}/`} to={`${process.env.PUBLIC_URL}/players`}/>\n            <Route path={`${process.env.PUBLIC_URL}/wcl`} component={WCLPage}/>\n            <Route path={`${process.env.PUBLIC_URL}/players`} component={PlayersPage}/>\n            <Route exact path={`${process.env.PUBLIC_URL}/player/:playerId`} component={PlayersPage}/>\n            <Route exact path={`${process.env.PUBLIC_URL}/raids`} component={RaidsPage}/>\n            <Route exact path={`${process.env.PUBLIC_URL}/raid/:raidId`} component={RaidsPage}/>\n        </Switch>\n    </Router>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}